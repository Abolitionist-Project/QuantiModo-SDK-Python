#!/usr/bin/env python
# coding: utf-8

"""
Copyright 2015 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""
from pprint import pformat
from six import iteritems


class PostCorrelation(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        Swagger model

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'cause': 'str',
            'effect': 'str',
            'correlation': 'float',
            'vote': 'int'
        }

        self.attribute_map = {
            'cause': 'cause',
            'effect': 'effect',
            'correlation': 'correlation',
            'vote': 'vote'
        }

        self._cause = None    # Cause variable name
        self._effect = None    # Effect variable name
        self._correlation = None    # Correlation value
        self._vote = None    # Vote: 0 or 1

    @property
    def cause(self):
        return self._cause

    @cause.setter
    def cause(self, cause):
        self._cause = cause

    @property
    def effect(self):
        return self._effect

    @effect.setter
    def effect(self, effect):
        self._effect = effect

    @property
    def correlation(self):
        return self._correlation

    @correlation.setter
    def correlation(self, correlation):
        self._correlation = correlation

    @property
    def vote(self):
        return self._vote

    @vote.setter
    def vote(self, vote):
        self._vote = vote

    def to_dict(self):
        """
        Return model properties dict
        """
        result = {}

        for name, prop in iteritems(self.__dict__):
            if name == "attribute_map" or name == "swagger_types":
                continue
            if isinstance(prop, list):
                result[name[1:]] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    prop
                ))
            elif hasattr(prop, "to_dict"):
                result[name[1:]] = prop.to_dict()
            else:
                result[name[1:]] = prop

        return result

    def to_str(self):
        """
        Return model properties str
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()
