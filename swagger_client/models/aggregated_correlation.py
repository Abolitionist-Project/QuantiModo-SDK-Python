# coding: utf-8

"""
Copyright 2015 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class AggregatedCorrelation(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        AggregatedCorrelation - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id': 'int',
            'correlation': 'float',
            'cause_id': 'int',
            'effect_id': 'int',
            'onset_delay': 'int',
            'duration_of_action': 'int',
            'number_of_pairs': 'int',
            'value_predicting_high_outcome': 'float',
            'value_predicting_low_outcome': 'float',
            'optimal_pearson_product': 'float',
            'vote': 'float',
            'number_of_users': 'int',
            'number_of_correlations': 'int',
            'statistical_significance': 'float',
            'cause_unit': 'str',
            'cause_unit_id': 'int',
            'cause_changes': 'int',
            'effect_changes': 'int',
            'aggregate_qm_score': 'float',
            'created_at': 'datetime',
            'updated_at': 'datetime',
            'status': 'str',
            'error_message': 'str',
            'last_successful_update_time': 'datetime',
            'reverse_pearson_correlation_coefficient': 'float',
            'predictive_pearson_correlation_coefficient': 'float'
        }

        self.attribute_map = {
            'id': 'id',
            'correlation': 'correlation',
            'cause_id': 'cause_id',
            'effect_id': 'effect_id',
            'onset_delay': 'onset_delay',
            'duration_of_action': 'duration_of_action',
            'number_of_pairs': 'number_of_pairs',
            'value_predicting_high_outcome': 'value_predicting_high_outcome',
            'value_predicting_low_outcome': 'value_predicting_low_outcome',
            'optimal_pearson_product': 'optimal_pearson_product',
            'vote': 'vote',
            'number_of_users': 'number_of_users',
            'number_of_correlations': 'number_of_correlations',
            'statistical_significance': 'statistical_significance',
            'cause_unit': 'cause_unit',
            'cause_unit_id': 'cause_unit_id',
            'cause_changes': 'cause_changes',
            'effect_changes': 'effect_changes',
            'aggregate_qm_score': 'aggregate_qm_score',
            'created_at': 'created_at',
            'updated_at': 'updated_at',
            'status': 'status',
            'error_message': 'error_message',
            'last_successful_update_time': 'last_successful_update_time',
            'reverse_pearson_correlation_coefficient': 'reverse_pearson_correlation_coefficient',
            'predictive_pearson_correlation_coefficient': 'predictive_pearson_correlation_coefficient'
        }

        self._id = None
        self._correlation = None
        self._cause_id = None
        self._effect_id = None
        self._onset_delay = None
        self._duration_of_action = None
        self._number_of_pairs = None
        self._value_predicting_high_outcome = None
        self._value_predicting_low_outcome = None
        self._optimal_pearson_product = None
        self._vote = None
        self._number_of_users = None
        self._number_of_correlations = None
        self._statistical_significance = None
        self._cause_unit = None
        self._cause_unit_id = None
        self._cause_changes = None
        self._effect_changes = None
        self._aggregate_qm_score = None
        self._created_at = None
        self._updated_at = None
        self._status = None
        self._error_message = None
        self._last_successful_update_time = None
        self._reverse_pearson_correlation_coefficient = None
        self._predictive_pearson_correlation_coefficient = None

    @property
    def id(self):
        """
        Gets the id of this AggregatedCorrelation.
        id

        :return: The id of this AggregatedCorrelation.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this AggregatedCorrelation.
        id

        :param id: The id of this AggregatedCorrelation.
        :type: int
        """
        self._id = id

    @property
    def correlation(self):
        """
        Gets the correlation of this AggregatedCorrelation.
        correlation

        :return: The correlation of this AggregatedCorrelation.
        :rtype: float
        """
        return self._correlation

    @correlation.setter
    def correlation(self, correlation):
        """
        Sets the correlation of this AggregatedCorrelation.
        correlation

        :param correlation: The correlation of this AggregatedCorrelation.
        :type: float
        """
        self._correlation = correlation

    @property
    def cause_id(self):
        """
        Gets the cause_id of this AggregatedCorrelation.
        cause_id

        :return: The cause_id of this AggregatedCorrelation.
        :rtype: int
        """
        return self._cause_id

    @cause_id.setter
    def cause_id(self, cause_id):
        """
        Sets the cause_id of this AggregatedCorrelation.
        cause_id

        :param cause_id: The cause_id of this AggregatedCorrelation.
        :type: int
        """
        self._cause_id = cause_id

    @property
    def effect_id(self):
        """
        Gets the effect_id of this AggregatedCorrelation.
        effect_id

        :return: The effect_id of this AggregatedCorrelation.
        :rtype: int
        """
        return self._effect_id

    @effect_id.setter
    def effect_id(self, effect_id):
        """
        Sets the effect_id of this AggregatedCorrelation.
        effect_id

        :param effect_id: The effect_id of this AggregatedCorrelation.
        :type: int
        """
        self._effect_id = effect_id

    @property
    def onset_delay(self):
        """
        Gets the onset_delay of this AggregatedCorrelation.
        onset_delay

        :return: The onset_delay of this AggregatedCorrelation.
        :rtype: int
        """
        return self._onset_delay

    @onset_delay.setter
    def onset_delay(self, onset_delay):
        """
        Sets the onset_delay of this AggregatedCorrelation.
        onset_delay

        :param onset_delay: The onset_delay of this AggregatedCorrelation.
        :type: int
        """
        self._onset_delay = onset_delay

    @property
    def duration_of_action(self):
        """
        Gets the duration_of_action of this AggregatedCorrelation.
        duration_of_action

        :return: The duration_of_action of this AggregatedCorrelation.
        :rtype: int
        """
        return self._duration_of_action

    @duration_of_action.setter
    def duration_of_action(self, duration_of_action):
        """
        Sets the duration_of_action of this AggregatedCorrelation.
        duration_of_action

        :param duration_of_action: The duration_of_action of this AggregatedCorrelation.
        :type: int
        """
        self._duration_of_action = duration_of_action

    @property
    def number_of_pairs(self):
        """
        Gets the number_of_pairs of this AggregatedCorrelation.
        number_of_pairs

        :return: The number_of_pairs of this AggregatedCorrelation.
        :rtype: int
        """
        return self._number_of_pairs

    @number_of_pairs.setter
    def number_of_pairs(self, number_of_pairs):
        """
        Sets the number_of_pairs of this AggregatedCorrelation.
        number_of_pairs

        :param number_of_pairs: The number_of_pairs of this AggregatedCorrelation.
        :type: int
        """
        self._number_of_pairs = number_of_pairs

    @property
    def value_predicting_high_outcome(self):
        """
        Gets the value_predicting_high_outcome of this AggregatedCorrelation.
        value_predicting_high_outcome

        :return: The value_predicting_high_outcome of this AggregatedCorrelation.
        :rtype: float
        """
        return self._value_predicting_high_outcome

    @value_predicting_high_outcome.setter
    def value_predicting_high_outcome(self, value_predicting_high_outcome):
        """
        Sets the value_predicting_high_outcome of this AggregatedCorrelation.
        value_predicting_high_outcome

        :param value_predicting_high_outcome: The value_predicting_high_outcome of this AggregatedCorrelation.
        :type: float
        """
        self._value_predicting_high_outcome = value_predicting_high_outcome

    @property
    def value_predicting_low_outcome(self):
        """
        Gets the value_predicting_low_outcome of this AggregatedCorrelation.
        value_predicting_low_outcome

        :return: The value_predicting_low_outcome of this AggregatedCorrelation.
        :rtype: float
        """
        return self._value_predicting_low_outcome

    @value_predicting_low_outcome.setter
    def value_predicting_low_outcome(self, value_predicting_low_outcome):
        """
        Sets the value_predicting_low_outcome of this AggregatedCorrelation.
        value_predicting_low_outcome

        :param value_predicting_low_outcome: The value_predicting_low_outcome of this AggregatedCorrelation.
        :type: float
        """
        self._value_predicting_low_outcome = value_predicting_low_outcome

    @property
    def optimal_pearson_product(self):
        """
        Gets the optimal_pearson_product of this AggregatedCorrelation.
        optimal_pearson_product

        :return: The optimal_pearson_product of this AggregatedCorrelation.
        :rtype: float
        """
        return self._optimal_pearson_product

    @optimal_pearson_product.setter
    def optimal_pearson_product(self, optimal_pearson_product):
        """
        Sets the optimal_pearson_product of this AggregatedCorrelation.
        optimal_pearson_product

        :param optimal_pearson_product: The optimal_pearson_product of this AggregatedCorrelation.
        :type: float
        """
        self._optimal_pearson_product = optimal_pearson_product

    @property
    def vote(self):
        """
        Gets the vote of this AggregatedCorrelation.
        vote

        :return: The vote of this AggregatedCorrelation.
        :rtype: float
        """
        return self._vote

    @vote.setter
    def vote(self, vote):
        """
        Sets the vote of this AggregatedCorrelation.
        vote

        :param vote: The vote of this AggregatedCorrelation.
        :type: float
        """
        self._vote = vote

    @property
    def number_of_users(self):
        """
        Gets the number_of_users of this AggregatedCorrelation.
        number_of_users

        :return: The number_of_users of this AggregatedCorrelation.
        :rtype: int
        """
        return self._number_of_users

    @number_of_users.setter
    def number_of_users(self, number_of_users):
        """
        Sets the number_of_users of this AggregatedCorrelation.
        number_of_users

        :param number_of_users: The number_of_users of this AggregatedCorrelation.
        :type: int
        """
        self._number_of_users = number_of_users

    @property
    def number_of_correlations(self):
        """
        Gets the number_of_correlations of this AggregatedCorrelation.
        number_of_correlations

        :return: The number_of_correlations of this AggregatedCorrelation.
        :rtype: int
        """
        return self._number_of_correlations

    @number_of_correlations.setter
    def number_of_correlations(self, number_of_correlations):
        """
        Sets the number_of_correlations of this AggregatedCorrelation.
        number_of_correlations

        :param number_of_correlations: The number_of_correlations of this AggregatedCorrelation.
        :type: int
        """
        self._number_of_correlations = number_of_correlations

    @property
    def statistical_significance(self):
        """
        Gets the statistical_significance of this AggregatedCorrelation.
        statistical_significance

        :return: The statistical_significance of this AggregatedCorrelation.
        :rtype: float
        """
        return self._statistical_significance

    @statistical_significance.setter
    def statistical_significance(self, statistical_significance):
        """
        Sets the statistical_significance of this AggregatedCorrelation.
        statistical_significance

        :param statistical_significance: The statistical_significance of this AggregatedCorrelation.
        :type: float
        """
        self._statistical_significance = statistical_significance

    @property
    def cause_unit(self):
        """
        Gets the cause_unit of this AggregatedCorrelation.
        cause_unit

        :return: The cause_unit of this AggregatedCorrelation.
        :rtype: str
        """
        return self._cause_unit

    @cause_unit.setter
    def cause_unit(self, cause_unit):
        """
        Sets the cause_unit of this AggregatedCorrelation.
        cause_unit

        :param cause_unit: The cause_unit of this AggregatedCorrelation.
        :type: str
        """
        self._cause_unit = cause_unit

    @property
    def cause_unit_id(self):
        """
        Gets the cause_unit_id of this AggregatedCorrelation.
        cause_unit_id

        :return: The cause_unit_id of this AggregatedCorrelation.
        :rtype: int
        """
        return self._cause_unit_id

    @cause_unit_id.setter
    def cause_unit_id(self, cause_unit_id):
        """
        Sets the cause_unit_id of this AggregatedCorrelation.
        cause_unit_id

        :param cause_unit_id: The cause_unit_id of this AggregatedCorrelation.
        :type: int
        """
        self._cause_unit_id = cause_unit_id

    @property
    def cause_changes(self):
        """
        Gets the cause_changes of this AggregatedCorrelation.
        cause_changes

        :return: The cause_changes of this AggregatedCorrelation.
        :rtype: int
        """
        return self._cause_changes

    @cause_changes.setter
    def cause_changes(self, cause_changes):
        """
        Sets the cause_changes of this AggregatedCorrelation.
        cause_changes

        :param cause_changes: The cause_changes of this AggregatedCorrelation.
        :type: int
        """
        self._cause_changes = cause_changes

    @property
    def effect_changes(self):
        """
        Gets the effect_changes of this AggregatedCorrelation.
        effect_changes

        :return: The effect_changes of this AggregatedCorrelation.
        :rtype: int
        """
        return self._effect_changes

    @effect_changes.setter
    def effect_changes(self, effect_changes):
        """
        Sets the effect_changes of this AggregatedCorrelation.
        effect_changes

        :param effect_changes: The effect_changes of this AggregatedCorrelation.
        :type: int
        """
        self._effect_changes = effect_changes

    @property
    def aggregate_qm_score(self):
        """
        Gets the aggregate_qm_score of this AggregatedCorrelation.
        aggregate_qm_score

        :return: The aggregate_qm_score of this AggregatedCorrelation.
        :rtype: float
        """
        return self._aggregate_qm_score

    @aggregate_qm_score.setter
    def aggregate_qm_score(self, aggregate_qm_score):
        """
        Sets the aggregate_qm_score of this AggregatedCorrelation.
        aggregate_qm_score

        :param aggregate_qm_score: The aggregate_qm_score of this AggregatedCorrelation.
        :type: float
        """
        self._aggregate_qm_score = aggregate_qm_score

    @property
    def created_at(self):
        """
        Gets the created_at of this AggregatedCorrelation.
        created_at

        :return: The created_at of this AggregatedCorrelation.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """
        Sets the created_at of this AggregatedCorrelation.
        created_at

        :param created_at: The created_at of this AggregatedCorrelation.
        :type: datetime
        """
        self._created_at = created_at

    @property
    def updated_at(self):
        """
        Gets the updated_at of this AggregatedCorrelation.
        updated_at

        :return: The updated_at of this AggregatedCorrelation.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """
        Sets the updated_at of this AggregatedCorrelation.
        updated_at

        :param updated_at: The updated_at of this AggregatedCorrelation.
        :type: datetime
        """
        self._updated_at = updated_at

    @property
    def status(self):
        """
        Gets the status of this AggregatedCorrelation.
        status

        :return: The status of this AggregatedCorrelation.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """
        Sets the status of this AggregatedCorrelation.
        status

        :param status: The status of this AggregatedCorrelation.
        :type: str
        """
        self._status = status

    @property
    def error_message(self):
        """
        Gets the error_message of this AggregatedCorrelation.
        error_message

        :return: The error_message of this AggregatedCorrelation.
        :rtype: str
        """
        return self._error_message

    @error_message.setter
    def error_message(self, error_message):
        """
        Sets the error_message of this AggregatedCorrelation.
        error_message

        :param error_message: The error_message of this AggregatedCorrelation.
        :type: str
        """
        self._error_message = error_message

    @property
    def last_successful_update_time(self):
        """
        Gets the last_successful_update_time of this AggregatedCorrelation.
        last_successful_update_time

        :return: The last_successful_update_time of this AggregatedCorrelation.
        :rtype: datetime
        """
        return self._last_successful_update_time

    @last_successful_update_time.setter
    def last_successful_update_time(self, last_successful_update_time):
        """
        Sets the last_successful_update_time of this AggregatedCorrelation.
        last_successful_update_time

        :param last_successful_update_time: The last_successful_update_time of this AggregatedCorrelation.
        :type: datetime
        """
        self._last_successful_update_time = last_successful_update_time

    @property
    def reverse_pearson_correlation_coefficient(self):
        """
        Gets the reverse_pearson_correlation_coefficient of this AggregatedCorrelation.
        reverse_pearson_correlation_coefficient

        :return: The reverse_pearson_correlation_coefficient of this AggregatedCorrelation.
        :rtype: float
        """
        return self._reverse_pearson_correlation_coefficient

    @reverse_pearson_correlation_coefficient.setter
    def reverse_pearson_correlation_coefficient(self, reverse_pearson_correlation_coefficient):
        """
        Sets the reverse_pearson_correlation_coefficient of this AggregatedCorrelation.
        reverse_pearson_correlation_coefficient

        :param reverse_pearson_correlation_coefficient: The reverse_pearson_correlation_coefficient of this AggregatedCorrelation.
        :type: float
        """
        self._reverse_pearson_correlation_coefficient = reverse_pearson_correlation_coefficient

    @property
    def predictive_pearson_correlation_coefficient(self):
        """
        Gets the predictive_pearson_correlation_coefficient of this AggregatedCorrelation.
        predictive_pearson_correlation_coefficient

        :return: The predictive_pearson_correlation_coefficient of this AggregatedCorrelation.
        :rtype: float
        """
        return self._predictive_pearson_correlation_coefficient

    @predictive_pearson_correlation_coefficient.setter
    def predictive_pearson_correlation_coefficient(self, predictive_pearson_correlation_coefficient):
        """
        Sets the predictive_pearson_correlation_coefficient of this AggregatedCorrelation.
        predictive_pearson_correlation_coefficient

        :param predictive_pearson_correlation_coefficient: The predictive_pearson_correlation_coefficient of this AggregatedCorrelation.
        :type: float
        """
        self._predictive_pearson_correlation_coefficient = predictive_pearson_correlation_coefficient

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()
