# coding: utf-8

"""
Copyright 2015 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class ConnectorInfoHistoryItem(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        ConnectorInfoHistoryItem - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'number_of_measurements': 'int',
            'success': 'bool',
            'message': 'str',
            'created_at': 'str'
        }

        self.attribute_map = {
            'number_of_measurements': 'number_of_measurements',
            'success': 'success',
            'message': 'message',
            'created_at': 'created_at'
        }

        self._number_of_measurements = None
        self._success = None
        self._message = None
        self._created_at = None

    @property
    def number_of_measurements(self):
        """
        Gets the number_of_measurements of this ConnectorInfoHistoryItem.
        Number of measurements

        :return: The number_of_measurements of this ConnectorInfoHistoryItem.
        :rtype: int
        """
        return self._number_of_measurements

    @number_of_measurements.setter
    def number_of_measurements(self, number_of_measurements):
        """
        Sets the number_of_measurements of this ConnectorInfoHistoryItem.
        Number of measurements

        :param number_of_measurements: The number_of_measurements of this ConnectorInfoHistoryItem.
        :type: int
        """
        self._number_of_measurements = number_of_measurements

    @property
    def success(self):
        """
        Gets the success of this ConnectorInfoHistoryItem.
        True if the update was successfull

        :return: The success of this ConnectorInfoHistoryItem.
        :rtype: bool
        """
        return self._success

    @success.setter
    def success(self, success):
        """
        Sets the success of this ConnectorInfoHistoryItem.
        True if the update was successfull

        :param success: The success of this ConnectorInfoHistoryItem.
        :type: bool
        """
        self._success = success

    @property
    def message(self):
        """
        Gets the message of this ConnectorInfoHistoryItem.
        Error message.

        :return: The message of this ConnectorInfoHistoryItem.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """
        Sets the message of this ConnectorInfoHistoryItem.
        Error message.

        :param message: The message of this ConnectorInfoHistoryItem.
        :type: str
        """
        self._message = message

    @property
    def created_at(self):
        """
        Gets the created_at of this ConnectorInfoHistoryItem.
        Date and time of the update

        :return: The created_at of this ConnectorInfoHistoryItem.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """
        Sets the created_at of this ConnectorInfoHistoryItem.
        Date and time of the update

        :param created_at: The created_at of this ConnectorInfoHistoryItem.
        :type: str
        """
        self._created_at = created_at

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()
