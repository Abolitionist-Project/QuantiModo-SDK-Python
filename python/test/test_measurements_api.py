# coding: utf-8

"""
    QuantiModo

    QuantiModo makes it easy to retrieve normalized user data from a wide array of devices and applications. [Learn about QuantiModo](https://quantimo.do), check out our [docs](https://github.com/QuantiModo/docs) or contact us at [help.quantimo.do](https://help.quantimo.do). 

    OpenAPI spec version: 2.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

from __future__ import absolute_import

import os
import sys
import unittest

import swagger_client
from swagger_client.rest import ApiException
from swagger_client.apis.measurements_api import MeasurementsApi


class TestMeasurementsApi(unittest.TestCase):
    """ MeasurementsApi unit test stubs """

    def setUp(self):
        self.api = swagger_client.apis.measurements_api.MeasurementsApi()

    def tearDown(self):
        pass

    def test_v1_measurement_sources_get(self):
        """
        Test case for v1_measurement_sources_get

        Get measurement sources
        """
        pass

    def test_v1_measurement_sources_post(self):
        """
        Test case for v1_measurement_sources_post

        Add a data source
        """
        pass

    def test_v1_measurements_daily_get(self):
        """
        Test case for v1_measurements_daily_get

        Get daily measurements for this user
        """
        pass

    def test_v1_measurements_delete_post(self):
        """
        Test case for v1_measurements_delete_post

        Delete a measurement
        """
        pass

    def test_v1_measurements_get(self):
        """
        Test case for v1_measurements_get

        Get measurements for this user
        """
        pass

    def test_v1_measurements_post(self):
        """
        Test case for v1_measurements_post

        Post a new set or update existing measurements to the database
        """
        pass

    def test_v1_measurements_range_get(self):
        """
        Test case for v1_measurements_range_get

        Get measurements range for this user
        """
        pass

    def test_v1_measurements_update_post(self):
        """
        Test case for v1_measurements_update_post

        Update a measurement
        """
        pass

    def test_v2_measurements_csv_get(self):
        """
        Test case for v2_measurements_csv_get

        Get Measurements CSV
        """
        pass

    def test_v2_measurements_request_csv_post(self):
        """
        Test case for v2_measurements_request_csv_post

        Post Request for Measurements CSV
        """
        pass

    def test_v2_measurements_request_pdf_post(self):
        """
        Test case for v2_measurements_request_pdf_post

        Post Request for Measurements PDF
        """
        pass

    def test_v2_measurements_request_xls_post(self):
        """
        Test case for v2_measurements_request_xls_post

        Post Request for Measurements XLS
        """
        pass


if __name__ == '__main__':
    unittest.main()
