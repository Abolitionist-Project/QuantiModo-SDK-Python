#!/usr/bin/env python
# coding: utf-8

"""
UnitsApi.py
Copyright 2015 Reverb Technologies, Inc.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
"""
import sys
import os
import urllib

from models import *


class UnitsApi(object):

    def __init__(self, apiClient):
      self.apiClient = apiClient

    
    
    def unitCategoriesGet(self, **kwargs):
        """Get unit categories

        Args:
            
        
        Returns: 
        """

        allParams = []

        params = locals()
        for (key, val) in params['kwargs'].iteritems():
            if key not in allParams:
                raise TypeError("Got an unexpected keyword argument '%s' to method unitCategoriesGet" % key)
            params[key] = val
        del params['kwargs']

        resourcePath = '/unitCategories'
        resourcePath = resourcePath.replace('{format}', 'json')
        method = 'GET'

        queryParams = {}
        headerParams = {}
        formParams = {}
        files = {}
        bodyParam = None

        headerParams['Accept'] = 'application/json'
        headerParams['Content-Type'] = ''

        

        

        

        

        

        postData = (formParams if formParams else bodyParam)

        response = self.apiClient.callAPI(resourcePath, method, queryParams,
                                          postData, headerParams, files=files)

        
        
        
    
    def unitsGet(self, **kwargs):
        """Get all available units

        Args:
            
            unit_name, str: Unit name (required)
            
            
            abbreviated_unit_name, str: Unit abbreviation (required)
            
            
            category_name, str: Unit category (required)
            
            
        
        Returns: 
        """

        allParams = ['unit_name', 'abbreviated_unit_name', 'category_name']

        params = locals()
        for (key, val) in params['kwargs'].iteritems():
            if key not in allParams:
                raise TypeError("Got an unexpected keyword argument '%s' to method unitsGet" % key)
            params[key] = val
        del params['kwargs']

        resourcePath = '/units'
        resourcePath = resourcePath.replace('{format}', 'json')
        method = 'GET'

        queryParams = {}
        headerParams = {}
        formParams = {}
        files = {}
        bodyParam = None

        headerParams['Accept'] = 'application/json'
        headerParams['Content-Type'] = ''

        
        if ('unit_name' in params):
            queryParams['unitName'] = self.apiClient.toPathValue(params['unit_name'])
        
        if ('abbreviated_unit_name' in params):
            queryParams['abbreviatedUnitName'] = self.apiClient.toPathValue(params['abbreviated_unit_name'])
        
        if ('category_name' in params):
            queryParams['categoryName'] = self.apiClient.toPathValue(params['category_name'])
        

        

        

        

        

        postData = (formParams if formParams else bodyParam)

        response = self.apiClient.callAPI(resourcePath, method, queryParams,
                                          postData, headerParams, files=files)

        
        
        
    
    def unitsVariableGet(self, **kwargs):
        """Get all available units for variable

        Args:
            
            variable, str: Variable name (required)
            
            
            unit_name, str: Unit name (required)
            
            
            cabbreviated_unit_name, str: Unit abbreviation (required)
            
            
            category_name, str: Unit category (required)
            
            
        
        Returns: 
        """

        allParams = ['variable', 'unit_name', 'cabbreviated_unit_name', 'category_name']

        params = locals()
        for (key, val) in params['kwargs'].iteritems():
            if key not in allParams:
                raise TypeError("Got an unexpected keyword argument '%s' to method unitsVariableGet" % key)
            params[key] = val
        del params['kwargs']

        resourcePath = '/unitsVariable'
        resourcePath = resourcePath.replace('{format}', 'json')
        method = 'GET'

        queryParams = {}
        headerParams = {}
        formParams = {}
        files = {}
        bodyParam = None

        headerParams['Accept'] = 'application/json'
        headerParams['Content-Type'] = ''

        
        if ('variable' in params):
            queryParams['variable'] = self.apiClient.toPathValue(params['variable'])
        
        if ('unit_name' in params):
            queryParams['unitName'] = self.apiClient.toPathValue(params['unit_name'])
        
        if ('cabbreviated_unit_name' in params):
            queryParams['cabbreviatedUnitName'] = self.apiClient.toPathValue(params['cabbreviated_unit_name'])
        
        if ('category_name' in params):
            queryParams['categoryName'] = self.apiClient.toPathValue(params['category_name'])
        

        

        

        

        

        postData = (formParams if formParams else bodyParam)

        response = self.apiClient.callAPI(resourcePath, method, queryParams,
                                          postData, headerParams, files=files)

        
        
        
    


